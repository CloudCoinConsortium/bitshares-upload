require 'net/http'
class WelcomeController < ApplicationController
  def index
  end

  def review
    receipt = params["receipt"]
    # Check Receipt
    uri = URI("https://bitshares.cloudcoin.global/get_receipt.aspx")
    uri.query = URI.encode_www_form(:rn => receipt)
    res = Net::HTTP.get_response(uri)
    # res.code should be 200
    if (res.is_a?(Net::HTTPSuccess))
      # convert the response into JSON object
      response_json = JSON.parse(res.body)
      # get the status of the receipt
      status = response_json["status"]

      if (status == "fail")
        # todo
      else
        # todo
      end

      asdf
    end

  end

  def upload
    uploaded_io = params["cloud_coin_file"]
    # Generate a file name that will be unique YYYYMMSSuploadedfile.stack
    # Eg. 20180616CloudCoins.stack
    generated_file_name = Time.now.strftime("%Y%m%d%H%M%S") + uploaded_io.original_filename
    # Save the uploaded file to public/uploads
    File.open(Rails.root.join('public', 'uploads', generated_file_name), 'wb') do |file|
      file.write(uploaded_io.read)
    end
    
    # Get the file content
    uploaded_file_content = File.read(Rails.root.join('public', 'uploads', generated_file_name))

    # This will hold the receipt generated by Deposit one stack
    receipt = ""

    # https://ruby-doc.org/stdlib-2.5.1/libdoc/net/http/rdoc/Net/HTTP.html
    # http://www.rubyinside.com/nethttp-cheat-sheet-2940.html
    uri = URI.parse("https://bitshares.cloudcoin.global/deposit_one_stack.aspx")
    # Response
    res = ""
    Net::HTTP.start(uri.host, uri.port, :use_ssl => true) do |http|
      req = Net::HTTP::Post.new(uri)
      req.set_form_data("stack" => uploaded_file_content)
      res = http.request(req)
      # res.code should be 200
    end
    if (res.is_a?(Net::HTTPSuccess))
      response_json = JSON.parse(res.body)
      receipt = response_json["receipt"]
      redirect_to controller: "welcome", action: "review", file_name: generated_file_name, receipt: receipt
    else
      redirect_to controller: "welcome", action: "index"
    end
  end
end
